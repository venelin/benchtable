% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/benchmark.R
\name{benchmark}
\alias{benchmark}
\title{Apply a function to each row of a data.table and add the result as a column}
\usage{
benchmark(f, benchdata, fname = NULL, table.file = NULL,
  report = function(p, obj) { }, result.only = F, id.result.only = F,
  paramsEvalAtCall = "", ...)
}
\arguments{
\item{f}{a character or a function object}

\item{benchdata}{a data.table, can be NULL in which case the table.file is 
loaded expecting it to contain a data.table object.}

\item{fname}{a character indicating the column-name to be used for the column 
of result, can be NULL in which case the name of the function specified by f
is used.}

\item{table.file}{a character specifying a .RData file where the resulting 
data.table object is to be stored. Defaults to NULL. See 
benchdata.}

\item{report}{a reporting function \code{(p, obj)} called after executing f 
on a row, used for logging purpose.}

\item{result.only}{logical indicating whether only the list of result objects should be returned, default FALSE}

\item{id.result.only}{logical indicating whether the returned data.table shall be limited to the id and fname 
columns only, default FALSE. Ignored if result.only is specified as TRUE.}

\item{paramsEvalAtCall}{a character, either an empty string '', or an R expression or comma separated expressions
such as 'parFixed=c(theta=mean(p$v))), parMax=c(theta=max(p$v))'. At evaluation these expression have access to 
the list p that is passed to f.}

\item{...}{additional parameters passed to f}
}
\value{
If result.only is FALSE (default) a data.table object equal to the original benchdata with a column 
named as fname for the results of calling f. If a column of the same name
already exists, it is overwritten. If the parameter id.result.only is FALSE (default) all the remaining columns
are also contained in the returned data.table. Otherwise only the columns id, and fname are returned. If result.only
is TRUE, than only a list of the resulting objects for each row of the original data.table is returned.
}

